{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?f446","webpack:///./src/components/Game.vue?375c","webpack:///./src/App.vue?ccd2","webpack:///./src/components/Game.vue?6bd6","webpack:///./src/game/entities.js","webpack:///./src/game/translator.js","webpack:///./src/game/tile.js","webpack:///./src/game/simulation.js","webpack:///./src/game/globals.js","webpack:///./src/game/display.js","webpack:///./src/game/map.js","webpack:///./src/game/main.js","webpack:///./src/game/user_ctrl.js","webpack:///./src/components/Game.vue?208d","webpack:///./src/components/Game.vue?06a8","webpack:///./src/components/Game.vue","webpack:///./src/App.vue?ec60","webpack:///./src/App.vue?640d","webpack:///./src/App.vue","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","_m","_v","staticClass","entities","Mortal","Base","_tile","remove_entity","Leveler","allows_step","tile","lvl","_lvl","Entity","_allows_step","push_entity","pos_y","pos_x","new_tile","Border","Infinity","Beach","Water","random","entity","Protozoan","offspring","_try_spawning","Animal","target_tile","pop_entity","_time_to_live","die","LandAnimal","_rdy_to_copulate","_food","prey_class","env","env_rings","prey_list","transform","found","prey","ate","sample","health","min_energy","_cfg","min_energy_replenish","_energy","min","_attack","killed_prey","Plant","level","devolve","mate_class","mating_partners","partner_list","partner","is_horny","birthplace_list","filter","method","birthplace","_have_sex","lvlup_chance","max_level","walkable","_devolve","child_class","veggy_lvl","top_entity","own_class","_route_to_mate","_is_hungry","_route_to_prey","_random_step","go_to_tile","possible_targets","_search_target_candidates","_make_step_choice","max_target_lvl","maxBy","conforms","partial","eq","target_class","undefined","view_rings","_view_range","candidates","each","ring","invokeMap","target_candidates","wanted_target","immediate_env","step_position","_calculate_step","target","x_dir","y_dir","walkable_tiles","actor_class","_grow_older","death","_hunt","_survive_without_food","_consume_from_food_reserves","newborn","_try_reproduction","_move","_health","new_health","Herbivore","cfg","config","view_range","time_to_live","energy","food","attack","Carnivore","_adjacent_beaches","constr","herby_evo_chance","swimmable_tiles","_beach_reachable","_jump_on_beach","Vegetation","_ticks_to_reproduce","free_tiles","ticks_repro_range","_try_growth","RainForest","Math","abs","_ticks_to_evolve","every","adjacent_veg","tick_range","ticks_evo_range","_set_configs","range","_can_evolve","_evolve","displayName","translator","animation_toggle","token_toggler","_","tokens","token_by_level","plant_token","plant","constant_token","mapping","Map","get_token","token_to_entity","symbol","entries","klass","display","found_idx","indexOf","instance","entity_to_token","token","css_class","toLowerCase","parse_initial_map","token_map","map","line","split","build_html_map","entity_map","do_toggle","tracked_idx","html_map","ent_row","row_idx","ent","col_idx","span","document","createElement","className","id","appendChild","createTextNode","Tile","_entity_stack","pop","pull","last","entity_class","find","empty","some","simulation","tile_map","entity_lists","setup_tile_map","entity_row","y","x","forEach","list","setup_env_rings","num_rings","tile_row","scope","calc_env_ring","center_y","center_x","x_on_map","env_ring","y_on_map","relative_x","add_environment_tile","relative_y","dummy","update","landanimal_action","vegetation_action","protozoan_action","water_action","plant_list","veggy_list","concat","new_plants","offspring_list","veggy","act","set","protozoan_list","dead_protos","dead_list","proto","new_animal","pullAll","water_list","new_protos","water","hunter_class","action_data","hunter","surviving_hunters","reject","eaten","difference","row","get_entity","kill_entity_type","type_name","markupPrefix","update_world","watched_idx","new_map","world_container","getElementById","old_map","firstElementChild","removeChild","highlight_watched_on_map","trackedId","currently_highlighted","querySelector","children","update_watched_info","watched_entity","_update_token_display","_update_watched_table","tracker_display","innerHTML","stats_table","statsPrefix","fields","Array","from","getElementsByTagName","name_field","findKey","field","stat","dataset","update_speed","step_duration","steps_per_sec","toFixed","padStart","String","fromCharCode","main","current_timeout","num_map_cols","step_change","max_step_duration","min_step_duration","simulation_stopped","display_simulation_state","is_new_step","check_watched_entity","step","loop","setTimeout","start_simulation","set_watched_entity","index_on_map","floor","in_simulation","slow_down_interval","limit_reached","speed_up_interval","stop_resume","clearTimeout","kill_all_of","entity_type","user_ctrl","slower_button","faster_button","pause_button","step_button","kill_button","kill_select","toggle_ctrls","setup_event_listeners","addEventListener","increase_speed","decrease_speed","kill_entities","setAttribute","toggle_ctrl_panel","track_entity","event","disable_button","removeEventListener","hasAttribute","removeAttribute","do_step","ctrl_panel","trim","style","height","scrollHeight","opacity","marginBottom","clicked","parentNode","extend","mounted","component","components","Game","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app-legacy.2dbe6517.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('Game',{attrs:{\"id\":\"evolife\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"evolife\"}},[_c('div',{attrs:{\"id\":\"evolife--world\"}}),_c('div',{attrs:{\"id\":\"evolife--control-panel\"}},[_c('div',{attrs:{\"id\":\"evolife--controls-wrapper\"}},[_c('label',[_vm._v(\"Steps per second: \")]),_c('span',{attrs:{\"id\":\"evolife--steps-per-sec\"}}),_c('div',{attrs:{\"id\":\"evolife--speed-ctrl\"}},[_c('button',{staticClass:\"evolife--ctrl-button\",attrs:{\"type\":\"button\",\"id\":\"evolife--slower\"}},[_vm._v(\" Slower \")]),_c('button',{staticClass:\"evolife--ctrl-button\",attrs:{\"type\":\"button\",\"id\":\"evolife--pause\"}},[_vm._v(\" Pause \")]),_c('button',{staticClass:\"evolife--ctrl-button\",attrs:{\"type\":\"button\",\"id\":\"evolife--faster\"}},[_vm._v(\" Faster \")]),_c('button',{staticClass:\"evolife--ctrl-button\",attrs:{\"type\":\"button\",\"id\":\"evolife--step\",\"disabled\":\"\"}},[_vm._v(\" Step \")])]),_c('div',{attrs:{\"id\":\"evolife--kill-switch-container\"}},[_c('select',{attrs:{\"id\":\"evolife--kill-options\"}},[_c('option',{attrs:{\"value\":\"Herbivore\",\"selected\":\"\"}},[_vm._v(\"Herbivore\")]),_c('option',{attrs:{\"value\":\"Carnivore\"}},[_vm._v(\"Carnivore\")]),_c('option',{attrs:{\"value\":\"Protozoan\"}},[_vm._v(\"Protozoan\")]),_c('option',{attrs:{\"value\":\"Plant\"}},[_vm._v(\"Plant\")])]),_c('button',{staticClass:\"evolife--ctrl-button\",attrs:{\"type\":\"button\",\"id\":\"evolife--kill\"}},[_vm._v(\" Kill All \")])]),_c('label',[_vm._v(\"Tracked: \")]),_c('div',{attrs:{\"id\":\"evolife--tracker-display\"}},[_vm._v(\"Ӝ\")]),_c('table',{attrs:{\"id\":\"evolife--entity-stats\"}},[_c('tr',[_c('th',[_vm._v(\"Type\")]),_c('td',{attrs:{\"id\":\"evolife--entity-stats__type\"}},[_vm._v(\"RainForest\")]),_c('th',[_vm._v(\"Level\")]),_c('td',{attrs:{\"id\":\"evolife--entity-stats__level\",\"data-stat\":\"level\"}},[_vm._v(\"3\")]),_c('th',[_vm._v(\"Time to Live\")]),_c('td',{staticClass:\"evolife--entity-stats__last-col\",attrs:{\"data-stat\":\"time_to_live\",\"id\":\"evolife--entity-stats__time-to-live\"}},[_vm._v(\" 32 \")])]),_c('tr',[_c('th',[_vm._v(\"Food\")]),_c('td',{attrs:{\"id\":\"evolife--entity-stats__food\",\"data-stat\":\"food\"}},[_vm._v(\"5\")]),_c('th',[_vm._v(\"Energy\")]),_c('td',{attrs:{\"id\":\"evolife--entity-stats__energy\",\"data-stat\":\"energy\"}},[_vm._v(\"10\")]),_c('th',[_vm._v(\"Health\")]),_c('td',{staticClass:\"evolife--entity-stats__last-col\",attrs:{\"data-stat\":\"health\",\"id\":\"evolife--entity-stats__health\"}},[_vm._v(\" 15 \")])]),_c('tr',[_c('th',[_vm._v(\"Attack\")]),_c('td',{attrs:{\"id\":\"evolife--entity-stats__attack\",\"data-stat\":\"attack\"}},[_vm._v(\"15\")]),_c('th',[_vm._v(\"Horny\")]),_c('td',{attrs:{\"data-stat\":\"is_horny\",\"id\":\"evolife--entity-stats__is-horny\"}},[_vm._v(\" Yes \")]),_c('th',[_vm._v(\"View Range\")]),_c('td',{staticClass:\"evolife--entity-stats__last-col\",attrs:{\"data-stat\":\"view_range\",\"id\":\"evolife--entity-stats__view-range\"}},[_vm._v(\" 8 \")])])])]),_c('button',{attrs:{\"type\":\"button\",\"id\":\"evolife--toggle-ctrls\"}},[_vm._v(\" Show Control Panel \")])])])}]\n\nexport { render, staticRenderFns }","/**\n * Game entity class hierarchy.\n * @module entities\n */\n\nimport {\n    min, maxBy, eq, random, sample, transform, invokeMap, filter,\n    every, slice, each, range, method, partial, conforms\n} from 'lodash-es'\n\nconst entities = function() {\n    function Mortal(Base = class {}) {\n        return class extends Base {\n            die() {\n                this._tile.remove_entity(this)\n                this._tile = null\n                return this\n            }\n        }\n    }\n\n    function Leveler(Base = class {}) {\n        return class extends Base {\n            constructor(allows_step, tile, lvl) {\n                super(allows_step, tile)\n                this._lvl = lvl\n            }\n\n            get level() {\n                return this._lvl\n            }\n        }\n    }\n\n    class Entity {\n        constructor(allows_step, tile = null) {\n            this._allows_step = allows_step\n            if(tile) {\n                this._tile = tile\n                tile.push_entity(this)\n            }\n        }\n\n        get pos_y() {\n            return this._tile.pos_y\n        }\n        get pos_x() {\n            return this._tile.pos_x\n        }\n        get tile() {\n            return this._tile\n        }\n        set tile(new_tile) {\n            this._tile = new_tile\n        }\n        get allows_step() {\n            return this._allows_step\n        }\n\n        in_simulation() {\n            return !!this._tile\n        }\n    }\n\n    class Border extends Entity {\n        constructor(tile) {\n            super(-Infinity, tile)\n        }\n    }\n\n    class Beach extends Entity {\n        constructor(tile) {\n            super(Infinity, tile)\n        }\n    }\n\n    class Water extends Entity {\n        constructor(tile) {\n            super(-Infinity, tile)\n        }\n\n        _try_spawning() {\n            if(random(100) < 1 && !this._tile.entity(Protozoan))\n                return new Protozoan(this._tile)\n            return null\n        }\n\n        act() {\n            return {offspring: this._try_spawning()}\n        }\n    }\n\n    class Animal extends Mortal(Entity) {\n        constructor(allows_step, tile) {\n            super(allows_step, tile)\n        }\n\n        go_to_tile(target_tile) {\n            this._tile.pop_entity()\n            target_tile.push_entity(this)\n            this._tile = target_tile\n        }\n\n        _grow_older() {\n            if(this._time_to_live-- === 0) {\n                this.die()\n                return false\n            }\n            return true\n        }\n\n        get time_to_live() {\n            return this._time_to_live\n        }\n    }\n\n    class LandAnimal extends Leveler(Animal) {\n        constructor(tile, lvl = 0) {\n            super(-Infinity, tile, lvl)\n            this._rdy_to_copulate = false\n        }\n\n        _is_hungry() {\n            return this._food === 0\n        }\n\n        _hunt(prey_class) {\n            const env = this._tile.env_rings[0]\n            const prey_list = transform(env, (found, tile) => {\n                const prey = tile.entity(prey_class)\n                if(prey) found.push(prey)\n            })\n\n            if(prey_list.length === 0)\n                return {ate: false}\n\n            const prey = sample(prey_list)\n            this._food += prey.health\n            const min_energy = this._cfg.min_energy_replenish\n            this._energy = min([min_energy, this._energy + 1])\n            this._rdy_to_copulate = true\n            if((prey.health -= this._attack) <= 0)\n                return {ate: true, killed_prey: prey.die()}\n            if(prey instanceof Plant && prey.level > 0)\n                prey.devolve()\n\n            return {ate: true}\n        }\n\n        _survive_without_food() {\n            this._rdy_to_copulate = false\n            if(this._energy-- === 0) {\n                this.die()\n                return false\n            }\n            return true\n        }\n\n        _consume_from_food_reserves() {\n            if(--this._food === 0)\n                this._rdy_to_copulate = false\n        }\n\n        _try_reproduction(mate_class) {\n            const env = this._tile.env_rings[0]\n            const mating_partners = transform(env, (partner_list, tile) => {\n                const partner = tile.entity(mate_class, this._lvl)\n                if(partner && partner.is_horny)\n                    partner_list.push(partner)\n            })\n\n            if(mating_partners.length === 0)\n                return null\n\n            const birthplace_list = filter(env, method('walkable'))\n            if(birthplace_list.length === 0)\n                return null\n            const birthplace = sample(birthplace_list)\n\n            this._have_sex(sample(mating_partners))\n\n            if(random(100) < this._cfg.lvlup_chance &&\n                this._lvl != this._cfg.max_level &&\n                birthplace.walkable(this._lvl + 1)\n            ){\n                return new mate_class(birthplace, this._lvl + 1)\n            } else if(birthplace.walkable(this._lvl)) {\n                return new mate_class(birthplace, this._lvl)\n            } else {\n                return this._devolve(mate_class, birthplace)\n            }\n        }\n\n        _have_sex(partner) {\n            this._rdy_to_copulate = partner._rdy_to_copulate = false\n        }\n\n        _devolve(child_class, birthplace) {\n            // it's assumed we need to devolve b/c of blocking veggy on tile\n            const veggy_lvl = birthplace.top_entity().level\n            return new child_class(birthplace, veggy_lvl - 1)\n        }\n\n        _move(own_class, prey_class) {\n            let target_tile\n\n            if(this.is_horny)\n                target_tile = this._route_to_mate(own_class)\n            else if(this._is_hungry() || this._lvl === 2)\n                target_tile = this._route_to_prey(prey_class)\n\n            // if entity is neither hungry nor horny, or the step towards a mate\n            // or prey can't be taken (is blocked), we try to move randomly\n            if(!target_tile) {\n                target_tile = this._random_step()\n                if(!target_tile) {  // no way to move: death of entity\n                    this.die()\n                    return false\n                }\n            }\n\n            this.go_to_tile(target_tile)\n            return true\n        }\n\n        _route_to_mate(mate_class) {\n            const possible_targets = this._search_target_candidates(\n                mate_class, this._lvl\n            )\n            if(possible_targets.length === 0)\n                return null\n            return this._make_step_choice(possible_targets)\n        }\n\n        _route_to_prey(prey_class) {\n            let possible_targets = this._search_target_candidates(prey_class)\n            if(possible_targets.length === 0)\n                return null\n\n            // of the found targets, we pick one with the highest lvl\n            const max_target_lvl = maxBy(possible_targets, 'level').level\n            possible_targets = filter(possible_targets, conforms(\n                { 'level': partial(eq, max_target_lvl) }\n            ))\n\n            return this._make_step_choice(possible_targets)\n        }\n\n        _search_target_candidates(target_class, lvl = undefined) {\n            const view_rings = slice(this._tile.env_rings, 1, this._view_range)\n            let candidates = []\n\n            each(view_rings, ring => {\n                candidates = filter(\n                    invokeMap(ring, 'entity', target_class, lvl)\n                )\n                if(candidates.length > 0)\n                    return false\n            })\n\n            return candidates\n        }\n\n        _make_step_choice(target_candidates) {\n            const wanted_target = sample(target_candidates)\n            const immediate_env = this._tile.env_rings[0]\n            const step_position = this._calculate_step(wanted_target)\n            const target_tile = immediate_env[step_position]\n\n            if(target_tile.walkable(this._lvl))\n                return target_tile\n\n            return null\n        }\n\n        /**\n         * Calculates step position in the immediate environment based on the\n         * position of the wanted target.\n         * @method calculate_step\n         * @param {LandAnimal} animal Animal that wants to move\n         * @param {Entity} target Target the animal wants to move towards\n         * @return {Number} The position in the immediate environment that leads\n         *                  towards the target\n         * @example\n         *      [0][1][2]\n         *      [3][x][4]\n         *      [5][6][7]\n         */\n        _calculate_step(target) {\n            const x_dir = (target.pos_x > this.pos_x) -\n                          (target.pos_x < this.pos_x)\n            const y_dir = (target.pos_y > this.pos_y) -\n                          (target.pos_y < this.pos_y)\n\n            if(y_dir == -1) {\n                switch(x_dir) {\n                    case -1: return 0\n                    case 0:  return 1\n                    case 1:  return 2\n                }\n            } else if(y_dir === 0) {\n                switch(x_dir) {\n                    case -1: return 3\n                    case 1:  return 4\n                }\n            } else if(y_dir == 1) {\n                switch(x_dir) {\n                    case -1: return 5\n                    case 0:  return 6\n                    case 1:  return 7\n                }\n            }\n        }\n\n        _random_step() {\n            const env = this._tile.env_rings[0]\n            const walkable_tiles = filter(env, method('walkable', this._lvl))\n            if(walkable_tiles.length > 0)\n                return sample(walkable_tiles)\n            else\n                return null\n        }\n\n        act(actor_class, prey_class) {\n            if(!this._grow_older())\n                return {death: true}\n\n            if(this._is_hungry()) {\n                const {ate, killed_prey} = this._hunt(prey_class)\n                if(ate)\n                    return {killed_prey}\n                if(!this._survive_without_food())\n                    return {death: true}\n\n                // if we land here, the herbivore couldn't eat, but didn't die\n            } else {\n                this._consume_from_food_reserves()\n\n                if(this.is_horny) {\n                    const newborn = this._try_reproduction(actor_class)\n                    if(newborn)\n                        return {offspring: newborn}\n                }\n            }\n\n            return {death: !this._move(actor_class, prey_class)}\n        }\n\n        get view_range() {\n            return this._view_range\n        }\n        get energy() {\n            return this._energy\n        }\n        get food() {\n            return this._food\n        }\n        get is_horny() {\n            return this._rdy_to_copulate\n        }\n        get attack() {\n            return this._attack\n        }\n        get health() {\n            return this._health\n        }\n        set health(new_health) {\n            this._health = new_health\n        }\n    }\n\n    class Herbivore extends LandAnimal {\n        constructor(tile, lvl) {\n            const cfg = Herbivore.config\n            const level = min([lvl, cfg.max_level])\n\n            super(tile, level)\n\n            this._cfg = cfg\n            this._view_range = cfg.view_range[level]\n            this._time_to_live = cfg.time_to_live[level]\n            this._energy = cfg.energy[level]\n            this._food = cfg.food[level]\n            this._health = cfg.health[level]\n            this._attack = cfg.attack[level]\n        }\n\n        act() {\n            return super.act(Herbivore, Plant)\n        }\n    }\n\n    class Carnivore extends LandAnimal {\n        constructor(tile, lvl) {\n            const cfg = Carnivore.config\n            const level = min([lvl, cfg.max_level])\n\n            super(tile, level)\n\n            this._cfg = cfg\n            this._view_range = cfg.view_range[level]\n            this._time_to_live = cfg.time_to_live[level]\n            this._energy = cfg.energy[level]\n            this._food = cfg.food[level]\n            this._health = cfg.health[level]\n            this._attack = cfg.attack[level]\n        }\n\n        act() {\n            return super.act(Carnivore, Herbivore)\n        }\n    }\n\n    class Protozoan extends Animal {\n        constructor(tile) {\n            super(-Infinity, tile)\n            this._time_to_live = Protozoan.config.time_to_live\n        }\n\n        _beach_reachable() {\n            const env = this._tile.env_rings[0]\n            // save as instance var for later use by _jump_on_beach\n            this._adjacent_beaches = filter(env, method('walkable'))\n            return this._adjacent_beaches.length > 0\n        }\n\n        _jump_on_beach() {\n            this.die()\n            const constr = random(100) < Protozoan.config.herby_evo_chance ?\n                Herbivore : Carnivore\n            return new constr(sample(this._adjacent_beaches), 0)\n        }\n\n        _move() {\n            if(!this._grow_older())\n                return false\n\n            const env = this._tile.env_rings[0]\n            const swimmable_tiles = filter(env, tile =>\n                tile.top_entity() instanceof Water\n            )\n            if(swimmable_tiles.length === 0) {\n                this.die()\n                return false; // dies when it has nowhere to move\n            }\n            this.go_to_tile(sample(swimmable_tiles))\n            return true\n        }\n\n        act() {\n            if(this._beach_reachable())\n                return {offspring: this._jump_on_beach()}\n            return {death: !this._move()}\n        }\n    }\n\n    class Vegetation extends Leveler(Entity) {\n        constructor(allows_step, tile, level) {\n            super(allows_step, tile, level)\n            this._ticks_to_reproduce = undefined\n        }\n\n        _try_growth() {\n            const env = this._tile.env_rings[0]\n            const free_tiles = filter(env, method('empty'))\n            if(free_tiles.length > 0) {\n                if(this._ticks_to_reproduce === undefined) {\n                    this._ticks_to_reproduce = random(\n                        ...Vegetation.config.ticks_repro_range\n                    )\n                } else if(--this._ticks_to_reproduce <= 0) {\n                    this._ticks_to_reproduce = undefined\n                    return new Plant(sample(free_tiles), 0)\n                }\n            } else {\n                this._ticks_to_reproduce = undefined\n            }\n\n            return null\n        }\n\n        act() {\n            return {offspring: this._try_growth()}\n        }\n    }\n\n    class RainForest extends Vegetation {\n        constructor(tile) {\n            super(-Infinity, tile, Infinity)\n        }\n    }\n\n    class Plant extends Mortal(Vegetation) {\n        constructor(tile, lvl) {\n            const cfg = Plant.config\n            const level = min([lvl, cfg.max_level])\n            const allows_step = Math.abs(lvl - cfg.max_level)\n\n            super(allows_step, tile, level)\n\n            this._health = cfg.health[level]\n            this._ticks_to_evolve = undefined\n        }\n\n        _set_configs(lvl) {\n            this._lvl = min([lvl, Plant.config.max_level])\n            this._allows_step = Math.abs(this._lvl - Plant.config.max_level)\n            this._health = Plant.config.health[this._lvl]\n            this._ticks_to_evolve = undefined\n        }\n\n        _can_evolve() {\n            if(this._lvl === Plant.config.max_level)\n                return false\n\n            const env = this._tile.env_rings[0]\n            if(every(env, tile => {\n                const adjacent_veg = tile.entity(Vegetation)\n                return adjacent_veg && adjacent_veg.level >= this._lvl ||\n                       tile.entity(Border)\n            })) {\n                if(this._ticks_to_evolve === undefined) {\n                    const tick_range = Plant.config.ticks_evo_range\n                    this._ticks_to_evolve = random(...tick_range)\n                    return false\n                } else {\n                    return --this._ticks_to_evolve <= 0\n                }\n            }\n\n            this._ticks_to_evolve = undefined\n            return false\n        }\n\n        _evolve() {\n            this._set_configs(this._lvl + 1); // lvlup\n            this._ticks_to_evolve = undefined\n        }\n\n        devolve() {\n            each(range(Plant.config.health.length - 1), lvl => {\n                if(this._health <= Plant.config.health[lvl]) {\n                    this._set_configs(lvl)\n                    return false\n                }\n            })\n        }\n\n        act() {\n            if(this._can_evolve()) {\n                this._evolve()\n                return {}\n            }\n            return super.act()\n        }\n\n        get health() {\n            return this._health\n        }\n        set health(new_health) {\n            this._health = new_health\n        }\n    }\n\n    Vegetation.config = {\n        ticks_repro_range: [10, 40]\n    }\n    Plant.config = {\n        max_level: 2,\n        health: [5, 10, 15],\n        ticks_evo_range: [40, 100]\n    }\n    Protozoan.config = {\n        time_to_live: 20,\n        herby_evo_chance: 80\n    }\n    Herbivore.config = {\n        max_level: 2,\n        time_to_live: [50, 100, 150],\n        view_range: [4, 6, 8],\n        food: [10, 10, 10],\n        energy: [10, 20, 30],\n        health: [5, 10, 15],\n        attack: [5, 10, 15],\n        lvlup_chance: 50,\n        min_energy_replenish: 10\n    }\n    Carnivore.config = {\n        max_level: 2,\n        time_to_live: [50, 100, 150],\n        view_range: [4, 6, 8],\n        food: [10, 10, 10],\n        energy: [10, 20, 30],\n        health: [5, 10, 15],\n        attack: [5, 10, 15],\n        lvlup_chance: 50,\n        min_energy_replenish: 10\n    }\n\n    // defined for css class associations\n    Border.displayName = 'Border'\n    Water.displayName = 'Water'\n    Beach.displayName = 'Beach'\n    RainForest.displayName = 'RainForest'\n    Plant.displayName = 'Plant'\n    Protozoan.displayName = 'Protozoan'\n    Herbivore.displayName = 'Herbivore'\n    Carnivore.displayName = 'Carnivore'\n\n    return {\n        Border, Water, Beach, RainForest, Plant, Protozoan, Herbivore, Carnivore\n    }\n}()\n\nexport default entities\n","/**\n * The translator is responsible for parsing the initial map in order to set\n * up the internal game logic data structures, as well as building an html map\n * based on these structures. It can be seen as an interface layer that handles\n * translations between internal game logic and the graphical display.\n * @module translator\n * @requires entities\n */\n\nimport { each, map, transform, indexOf } from 'lodash-es'\nimport entities from './entities'\n\n /**\n  * Singleton object containing translator functions.\n  * @class translator\n  */\nconst translator = function() {\n    let animation_toggle = 0\n\n    function token_toggler(_, tokens) {\n        return tokens[animation_toggle]\n    }\n\n    function token_by_level(entity, tokens) {\n        return tokens[entity.level]\n    }\n\n    function plant_token(plant, tokens) {\n        if(plant.level === 2)\n            return token_toggler(plant, tokens.slice(2))\n        return token_by_level(plant, tokens)\n    }\n\n    function constant_token(_, tokens) {\n        return tokens[0]\n    }\n\n    const mapping = new Map([\n        [entities.Herbivore,  { tokens: 'җҖӜ',  get_token: token_by_level }],\n        [entities.Carnivore,  { tokens: 'ԅԇʡ',  get_token: token_by_level }],\n        [entities.Plant,      { tokens: 'ʷʬYϒ', get_token: plant_token }],\n        [entities.RainForest, { tokens: 'Ϋϔ',   get_token: token_toggler }],\n        [entities.Water,      { tokens: '∼~',   get_token: token_toggler }],\n        [entities.Protozoan,  { tokens: '§',    get_token: constant_token }],\n        [entities.Beach,      { tokens: ':',    get_token: constant_token }]\n    ])\n\n    /**\n     * Return instance of an entity represented by the given token.\n     * @method token_to_entity\n     * @private\n     * @param {String} symbol Token representing an entity\n     * @return {Entity} Instance of an entity represented by the given token,\n     *                  or *null*, if token is unknown.\n     */\n    function token_to_entity(symbol) {\n        for(const [klass, display] of mapping.entries()) {\n            const found_idx = indexOf(display.tokens, symbol)\n            if(found_idx >= 0)\n                return klass.instance || new klass(null, found_idx)\n                /* some entities can be handled as one shared instance as a\n                   memory optimization */\n        }\n        return null\n    }\n\n    /**\n     * Return an object containing display information for the given entity.\n     * @method entity_to_token\n     * @param {Entity} entity Instance of an entity\n     * @return {Object} Display information for given entity (token, css class).\n     */\n    function entity_to_token(entity) {\n        if(entity)\n            for(const [klass, display] of mapping.entries())\n                if(entity instanceof klass)\n                    return {\n                        token: display.get_token(entity, display.tokens),\n                        css_class: `evolife--${klass.displayName.toLowerCase()}`\n                    }\n        return {token: ' ', css_class: ''}\n    }\n\n    /**\n     * Build an entity map out of a token map.\n     * @method parse_initial_map\n     * @param {Array} token_map 2D array representing a token map\n     * @return {Array} 2D array containing entity instances.\n     */\n    function parse_initial_map(token_map) {\n        return map(token_map, line =>\n            map(line.split(''), token => token_to_entity(token))\n        )\n    }\n\n    /**\n     * Build HTML string representing a token map out of the given entity map.\n     * @method build_html_map\n     * @param {Array} entity_map 2D array containing entities\n     * @param {Boolean} do_toggle True if token toggling shall happend when\n     *                            constructing the map, false otherwise.\n     * @param {Number} [tracked_idx=undefined] Index n of the entity to\n     *                 highlight as in child number n of its parent node.\n     *                 *undefined* if there is no entity to highlight.\n     * @return {Array} HTML string representing a token map to be displayed\n     *                 by inserting it into the DOM.\n     */\n    function build_html_map(entity_map, do_toggle, tracked_idx=undefined) {\n        if(do_toggle)\n            animation_toggle = animation_toggle === 0 ? 1 : 0\n\n        return transform(entity_map, (html_map, ent_row, row_idx) => {\n            each(ent_row, (ent, col_idx) => {\n                const {token, css_class} = entity_to_token(ent)\n                const span = document.createElement('span')\n\n                if(css_class)\n                    span.className = css_class\n                if(row_idx * ent_row.length + col_idx === tracked_idx)\n                    span.id = 'evolife--tracked'\n\n                span.appendChild(document.createTextNode(token))\n                html_map.appendChild(span)\n            })\n            html_map.appendChild(document.createTextNode('\\n'))\n        }, document.createElement('pre'))\n    }\n\n    return { entity_to_token, parse_initial_map, build_html_map }\n}()\n\nexport default translator\n","/**\n * The simulated map consists of a grid of tiles that all the entities can\n * move onto or out of.\n * @module tile\n */\n\nimport { pull, last, find, some } from 'lodash-es'\n\nclass Tile {\n    /**\n     * Tiles that make up the simulated map.\n     * @class Tile\n     * @constructor\n     * @param {Number} pos_y Vertical position on the grid as integer\n     * @param {Number} pos_x Horizontal position on the grid as integer\n     * @return {Tile} New tile instance\n     */\n    constructor(pos_y, pos_x) {\n        this.pos_y = pos_y\n        this.pos_x = pos_x\n        this.env_rings = []\n        this._entity_stack = []\n    }\n\n\n    /**\n     * Push entity on entity stack.\n     * @method push_entity\n     * @param {Entity} entity Entity to push\n     */\n    push_entity(entity) {\n        this._entity_stack.push(entity)\n    }\n\n    /**\n     * Pop entity off entity stack.\n     * @method pop_entity\n     * @return {Entity} Popped entity, or *null* if stack is empty.\n     */\n    pop_entity() {\n        return this._entity_stack.pop() || null\n    }\n\n    /**\n     * Remove given entity from entity stack.\n     * @method remove_entity\n     * @param {Entity} entity Entity to remove from stack\n     */\n    remove_entity(entity) {\n        pull(this._entity_stack, entity)\n    }\n\n    /**\n     * Return top of the entity stack.\n     * @method top_entity\n     * @return {Entity} Entity at the top, or *null* if stack is empty.\n     */\n    top_entity() {\n        return last(this._entity_stack) || null\n    }\n\n    /**\n     * Search for entity on the stack.\n     * @method entity\n     * @param {Class} [entity_class] Class of the searched entity.\n     * @param {Number} [lvl=undefined] Level of the searched entity.\n     *  Searches for entity of given class with any level if not provided.\n     * @return {Entity} Found Entity or *undefined*.\n     */\n    entity(entity_class, lvl = undefined) {\n        return find(this._entity_stack, entity => {\n            if(entity instanceof entity_class)\n                return lvl === undefined || entity.level === lvl\n        })\n    }\n\n    /**\n     * Tell whether this tile holds no entity on its stack.\n     * @method empty\n     * @return {Boolean} True if this tile holds no entity, false otherwise\n     */\n     empty() {\n        return !this.top_entity()\n     }\n\n    /**\n     * Tell whether this tile can be stepped on by an entity.\n     * @method walkable\n     * @param {Number} [lvl=0] Level of entity that wants to step on tile\n     * @return {Boolean} True if tile can be stepped on, false otherwise\n     */\n    walkable(lvl = 0) {\n        if(this.empty())\n            return true\n\n        if(some(this._entity_stack, entity => entity.allows_step < lvl))\n            return false\n\n        return true\n    }\n}\n\nexport default Tile\n","/**\n * Simulation logic.\n * @module simulation\n * @requires entities\n * @requires tile\n */\n\nimport entities from './entities'\nimport Tile from './tile'\nimport {\n    each, map, filter, reject, invokeMap, range, concat, difference, pullAll,\n    transform\n} from 'lodash-es'\n\n /**\n  * Singleton object containing simulation functions.\n  * @class simulation\n  */\nconst simulation = function() {\n    let tile_map = []\n    const entity_lists = new Map(map(entities, klass => [klass, []]))\n\n    /**\n     * Build up an internal tile map, based on the given entity map.\n     * @method setup_tile_map\n     * @param {Array} entity_map 2D array containing rows of entity objects\n     */\n    function setup_tile_map(entity_map) {\n        tile_map = map(entity_map, (entity_row, y) => {\n            return map(entity_row, (entity, x) => {\n                const tile = new Tile(y, x)\n                if(entity) {\n                    tile.push_entity(entity)\n                    entity.tile = tile\n                    entity_lists.forEach((list, klass) => {\n                        if(entity instanceof klass)\n                            list.push(entity)\n                    })\n                }\n                return tile\n            })\n        })\n        setup_env_rings(tile_map)\n    }\n\n    /**\n     * For each tile in the given tile map, set up multiple environment tile\n     * rings. Each of these rings is an array containing the surrounding tiles\n     * of a certain distance. These tiles can be inspected by entities to do\n     * their path finding.\n     * @method setup_env_rings\n     * @private\n     * @param {Array} tile_map 2D array containing rows of tiles\n     * @param {Number} [num_rings=8] number of environment rings\n     */\n    function setup_env_rings(tile_map, num_rings = 8) {\n        each(tile_map, (tile_row, y) =>\n            each(tile_row, (tile, x) =>\n                each(range(1, num_rings + 1), scope =>\n                    tile.env_rings.push(calc_env_ring(tile_map, y, x, scope))\n                )\n            )\n        )\n    }\n\n    /**\n     * Calculates the tile ring of the given scope around the tile at position\n     * center_y, center_x.\n     * @method calc_env_ring\n     * @private\n     * @param {Array} tile_map 2D list containing all tiles of the map\n     * @param {Number} center_y y-coordinate of the tile\n     * @param {Number} center_x x-coordinate of the tile\n     * @param {Number} scope expanse of the tile ring list to be calculated\n     * @example\n     *      scope = 1 [0][1][2] scope = 2 [0][1][2][3][4] (hex digits here)\n     *                [3][o][4]           [5]         [8]\n     *                [5][6][7]           [6]   [o]   [9]\n     *                                    [7]         [A]\n     *                                    [B][C][D][E][F]\n     *\n     * @return {Array} tile ring list\n     */\n    function calc_env_ring(tile_map, center_y, center_x, scope) {\n        const env_ring = []\n\n        let x_on_map, y_on_map = center_y - scope;     //top ring row\n        each(range(-scope, scope + 1), relative_x => {\n            x_on_map = center_x + relative_x\n            add_environment_tile(env_ring, tile_map, y_on_map, x_on_map, scope)\n        })\n\n        x_on_map = center_x - scope;     //left ring column\n        each(range(-scope + 1, scope), relative_y => {\n            y_on_map = center_y + relative_y\n            add_environment_tile(env_ring, tile_map, y_on_map, x_on_map, scope)\n        })\n\n        x_on_map = center_x + scope;     //right ring column\n        each(range(-scope + 1, scope), relative_y => {\n            y_on_map = center_y + relative_y\n            add_environment_tile(env_ring, tile_map, y_on_map, x_on_map, scope)\n        })\n\n        y_on_map = center_y + scope;     //bottom ring row\n        each(range(-scope, scope + 1), relative_x => {\n            x_on_map = center_x + relative_x\n            add_environment_tile(env_ring, tile_map, y_on_map, x_on_map, scope)\n        })\n\n        return env_ring\n    }\n\n    /**\n     * Adds a tile to the environment ring based on the given coordinates. If\n     * the coordinates lie outside of the map, two different actions might be\n     * taken, depending on the value of the scope argument.\n     * 1. If scope == 1, a dummy tile that contains a border entity is added.\n     *    This will effectively delimit the map.\n     * 2. If scope > 1, no tile is added.\n     *\n     * @method add_environment_tile\n     * @private\n     * @param {Array} env_ring environment tile ring to extend\n     * @param {Array} tile_map 2D list containing all tiles of the map\n     * @param {Number} pos_y y-coordinate of the environment tile\n     * @param {Number} pos_x x-coordinate of the environment tile\n     * @param {Number} scope expanse of the environment tile ring\n     */\n    function add_environment_tile(env_ring, tile_map, pos_y, pos_x, scope) {\n        if(tile_map[pos_y] && tile_map[pos_y][pos_x])\n            env_ring.push(tile_map[pos_y][pos_x])\n        else if(scope === 1) {\n            if(!entities.Border.dummy)\n                entities.Border.dummy = new entities.Border(new Tile())\n            env_ring.push(entities.Border.dummy.tile)\n        }\n    }\n\n    /**\n     * Let each entity make a move. This effectively advances the simulation\n     * on step forward.\n     * @method update\n     */\n    function update() {\n        landanimal_action(entities.Carnivore, entities.Herbivore)\n        landanimal_action(entities.Herbivore, entities.Plant)\n        vegetation_action()\n        protozoan_action()\n        water_action()\n    }\n\n    function vegetation_action() {\n        const plant_list = entity_lists.get(entities.Plant)\n        const veggy_list = concat(\n            plant_list, entity_lists.get(entities.RainForest)\n        )\n\n        const new_plants = transform(veggy_list, (offspring_list, veggy) => {\n            const {offspring} = veggy.act()\n            if(offspring)\n                offspring_list.push(offspring)\n        })\n\n        entity_lists.set(entities.Plant, concat(plant_list, new_plants))\n    }\n\n    function protozoan_action() {\n        const protozoan_list = entity_lists.get(entities.Protozoan)\n\n        const dead_protos = transform(protozoan_list, (dead_list, proto) => {\n            const {offspring: new_animal, death} = proto.act()\n            if(new_animal) {\n                each([entities.Herbivore, entities.Carnivore], entity_class => {\n                    if(new_animal instanceof entity_class)\n                        entity_lists.get(entity_class).push(new_animal)\n                })\n                dead_list.push(proto)\n            } else if(death) {\n                dead_list.push(proto)\n            }\n        })\n\n        pullAll(protozoan_list, dead_protos)\n    }\n\n    function water_action() {\n        const water_list = entity_lists.get(entities.Water)\n\n        const new_protos = transform(water_list, (offspring_list, water) => {\n            const {offspring} = water.act()\n            if(offspring)\n                offspring_list.push(offspring)\n        })\n\n        const protozoan_list = entity_lists.get(entities.Protozoan)\n        entity_lists.set(\n            entities.Protozoan, protozoan_list.concat(new_protos)\n        )\n    }\n\n    function landanimal_action(hunter_class, prey_class) {\n        const action_data = map(entity_lists.get(hunter_class), hunter =>\n            ({hunter, ...hunter.act()})\n        )\n\n        const surviving_hunters = map(reject(action_data, 'death'), 'hunter')\n        const offspring = map(filter(action_data, 'offspring'), 'offspring')\n        const eaten = map(filter(action_data, 'killed_prey'), 'killed_prey')\n\n        entity_lists.set(\n            prey_class, difference(entity_lists.get(prey_class), eaten)\n        )\n        entity_lists.set(\n            hunter_class, concat(surviving_hunters, offspring)\n        )\n    }\n\n    /**\n     * Return the current simulation state as a map of entity objects. Positions\n     * that hold no entity will be represented as *undefined*.\n     * @method entity_map\n     * @return {Array} 2D array containing rows of entity objects.\n     */\n    function entity_map() {\n        return map(tile_map, row => invokeMap(row, 'top_entity'))\n    }\n\n    /**\n     * Return the entity located at the given coordinates.\n     * @method get_entity\n     * @param {Number} y Row number\n     * @param {Number} x Column number\n     * @return {Entity} Entity located at the given coordinates, or *undefined*\n     *                  if there is none.\n     */\n    function get_entity(y, x) {\n        return tile_map[y][x].top_entity()\n    }\n\n    /**\n     * Kill all entities of the given type.\n     * @method kill_entity_type\n     * @param {String} type_name Class name of the entity type to kill\n     */\n    function kill_entity_type(type_name) {\n        const entity_class = entities[type_name]\n        invokeMap(entity_lists.get(entity_class), 'die')\n        entity_lists.set(entity_class, [])\n    }\n\n    // explicit syntax b/c we define a getter\n    return Object.create(Object.prototype, {\n        'setup_tile_map': {\n            value: setup_tile_map\n        },\n        'update': {\n            value: update\n        },\n        'entity_map': {\n            get: entity_map\n        },\n        'get_entity': {\n            value: get_entity\n        },\n        'kill_entity_type': {\n            value: kill_entity_type\n        }\n    })\n}()\n\nexport default simulation\n","const markupPrefix = 'evolife--'\n\nexport {\n  markupPrefix\n}\n","/**\n * HTML modification routines.\n * @module display\n * @requires translator\n * @requires entities\n * @requires globals\n */\n\nimport { pull, padStart, findKey } from 'lodash-es'\nimport translator from './translator'\nimport entities from './entities'\nimport { markupPrefix } from './globals'\n\n\n/**\n * Top level display singleton object.\n * @class display\n */\n const display = function() {\n    /**\n     * Draw world on browser window.\n     * @method update_world\n     * @param {Array} entity_map Entity map to translate and display\n     * @param {Boolean} do_toggle Whether the entity tokens should toggle on\n     *                            this update\n     * @param {Number} [watched_idx=undefined] Index n of the watched entity\n     *                 as in child number n of its parent node. *undefined*\n     *                 if there is no watched entity.\n     */\n    function update_world(entity_map, do_toggle, watched_idx=undefined) {\n        const new_map = translator.build_html_map(\n            entity_map, do_toggle, watched_idx\n        )\n        const world_container = document.getElementById(\n            `${markupPrefix}world`\n        )\n        const old_map = world_container.firstElementChild\n        if(old_map)\n            world_container.removeChild(old_map)\n        world_container.appendChild(new_map)\n    }\n\n    /**\n     * Highlight watched entity on the world map and clear previous\n     * highlighting.\n     * @method highlight_watched_on_map\n     * @param {Number} watched_idx Index n of the watched entity as in\n     *                             child number n of its parent node. Set to\n     *                             *undefined* if you just want to clear\n     *                             current highlighting.\n     */\n    function highlight_watched_on_map(watched_idx) {\n        const trackedId = `${markupPrefix}tracked`\n        const currently_highlighted = document.getElementById(trackedId)\n        if(currently_highlighted)\n            currently_highlighted.id = ''\n        if(watched_idx !== undefined) {\n            const map = document.querySelector(`#${markupPrefix}world pre`)\n            map.children[watched_idx].id = trackedId\n        }\n    }\n\n    /**\n     * Display the currently watched entity in the control panel by showing\n     * the token and displaying its stats in the table.\n     * @method update_watched_info\n     * @param {Entity} watched_entity Currently tracked entity. If *null*,\n     *                                the tracking info will be cleared.\n     */\n    function update_watched_info(watched_entity) {\n        _update_token_display(watched_entity)\n        _update_watched_table(watched_entity)\n    }\n\n    /**\n     * Display the currently watched entity, or clear display if there is none.\n     * @method _update_token_display\n     * @private\n     * @param {Entity} watched_entity Currently tracked entity. If *null*,\n     *                                the token display will be cleared.\n     */\n    function _update_token_display(watched_entity) {\n        const tracker_display = document.getElementById(\n            `${markupPrefix}tracker-display`\n        )\n\n        if(!watched_entity) {\n            tracker_display.className = ''\n            tracker_display.innerHTML = ''\n            return\n        }\n\n        const {token, css_class} = translator.entity_to_token(watched_entity)\n        tracker_display.className = css_class\n        tracker_display.innerHTML = token\n    }\n\n    /**\n     * Display the currently watched entity's stats in the table, or clear\n     * the table info if there is none.\n     * @method _update_watched_table\n     * @private\n     * @param {Entity} watched_entity Currently tracked entity. If *null*,\n     *                                the stats table will be cleared.\n     */\n    function _update_watched_table(watched_entity) {\n        const stats_table = document.getElementById(\n            `${markupPrefix}entity-stats`\n        )\n\n        const statsPrefix = `${markupPrefix}entity-stats__`\n        const fields = Array.from(stats_table.getElementsByTagName('td'))\n        const name_field = stats_table.querySelector(`#${statsPrefix}type`)\n        pull(fields, name_field)\n\n        if(watched_entity) {\n            name_field.innerHTML = findKey(entities, klass =>\n                watched_entity instanceof klass\n            )\n        } else {\n            name_field.innerHTML = '-'\n        }\n\n        for(const field of fields) {\n            const stat = field.dataset.stat\n\n            if(!watched_entity || watched_entity[stat] === undefined ||\n                                watched_entity[stat] === Infinity) {\n                field.innerHTML = '-'\n            } else {\n                // field dataset values match the entity property names\n                let value = watched_entity[stat]\n            if(stat === 'level')\n                ++value; // level starts at 0 internally\n            else if(stat === 'is_horny') // value is bool\n                value = ['No', 'Yes'][0+value]; // cast to int for indexing\n                field.innerHTML = value\n            }\n        }\n    }\n\n    /**\n     * Update the speed indicator.\n     * @method display_speed\n     * @param {Number} step_duration Duration of steps in milliseconds\n     */\n    function update_speed(step_duration) {\n        const steps_per_sec = (1000 / step_duration).toFixed(2)\n        document.querySelector(`#${markupPrefix}steps-per-sec`).innerHTML =\n            padStart(steps_per_sec, 5, String.fromCharCode(160)) // nbsp\n    }\n\n    return {\n        update_world,\n        highlight_watched_on_map,\n        update_watched_info,\n        update_speed\n    }\n}()\n\nexport default display\n","export default [\n'∼~∼~∼~∼~∼~∼:::ʷ ʷ ʷ                                                                                                                       ',\n'∼~∼~∼~∼~∼~∼~∼::: ʷ ʷ                                                                                                                      ',\n'∼~∼~∼~∼~∼~∼~∼~∼:: ʷ                                                ʷʷ                                                                     ',\n'∼~∼~∼~∼~∼~∼~∼::: ʷ ʷ                                            ʷ ϔϔϔϔʷ                                                                   ',\n'∼~∼~∼~∼~∼~∼~∼::ʷ ʷ                                               ϔϔϔϔϔϔ                                                                   ',\n'∼~∼~∼~∼~∼::::: ʷ                                                 ʷϔϔϔϔ ʷ                                              ʷ                   ',\n'∼~∼~∼~∼:::ʷ ʷ ʷ                                                     ʷ                                             ʷ  ʷϔϔ                  ',\n'∼~∼~∼~∼:: ʷ ʷ                                                                                                    ʷϔϔϔϔϔϔϔϔʷ               ',\n'∼~∼~∼:::ʷ ʷ                                                                                                        ϔϔϔϔϔϔ                 ',\n'∼~∼::: ʷ ʷ                                                                                                         ʷϔϔʷ  ʷ                ',\n'::::ʷ ʷ                                                                                                                                   ',\n'ʷ ʷ ʷ                                                                                                                                     ',\n' ʷ                                                                                                                                        ',\n'                                                                                                                                          ',\n'                                                                                                                                          ',\n'                            ʷ                                                                                                             ',\n'                            ϔϔʷ                                                                                                           ',\n'                          ʷϔϔϔϔ                                                                                                           ',\n'                            ϔϔϔʷ                                                                                                     ʷ ʷ ʷ',\n'                           ʷ ϔϔ                                                                                                 ʷ ʷ ʷ ʷ ʷ ',\n'                              ʷ                                                                                              ʷ ʷ ʷ :::::::',\n'                                                                                                                         ʷ ʷ ʷ:::::::~∼~∼~',\n'                                                                     ʷ  ʷʷ                                              ʷ ʷ::::∼~∼~∼~∼~∼~∼',\n'                                                                      ϔϔϔϔϔϔʷ ʷ                                       ʷ ʷ ::∼~∼~∼~∼~∼~∼~∼~',\n'                                                                   ʷϔϔϔϔϔϔϔϔϔϔϔ                                        ʷ ʷ ::∼~∼~∼~∼~∼~∼~∼',\n'                                                                    ʷ ϔϔϔϔϔϔϔʷ                                            ʷ ʷ::~∼~∼~∼~∼~∼~',\n'                                                                       ʷϔϔϔϔʷ                                           ʷ ʷ ::~∼~∼~∼~∼~∼~∼',\n'                                                                         ʷ   ʷ                                         ʷ ʷ:::~∼~∼~∼~∼~∼~∼~',\n'                                                                                                                      ʷ ʷ::∼~∼~∼~∼~∼~∼~∼~∼',\n'                                                                                                                     ʷ ʷ ::~∼~∼~∼~∼~∼~∼~∼~',\n'                                                                                                                       ʷ ʷ::~∼~∼~∼~∼~∼~∼~∼',\n'                                                                                                                      ʷ ʷ ::∼~∼~∼~∼~∼~∼~∼~',\n'                                                                                                                        ʷ ʷ:::~∼~∼~∼~∼~∼~∼'\n]\n","/**\n * Top level simulation control.\n * @module main\n * @main main\n * @requires translator\n * @requires simulation\n * @requires display\n */\n\nimport translator from './translator'\nimport simulation from './simulation'\nimport display from './display'\nimport map from './map'\n\n/**\n * Top level simulation control singleton object.\n * @class main\n */\nconst main = function() {\n\n    let step_duration = 500\n    const step_change = 100\n    const max_step_duration = 1000\n    const min_step_duration = 100\n    let simulation_stopped = false\n    let current_timeout\n    let watched_entity\n    let num_map_cols\n\n    /**\n     * Display current simulation state (map and tracking table).\n     * @param {Boolean} [is_new_step=true] Whether the state to display is a new\n     *                                     step in the simulation\n     * @private\n     * @method display_simulation_state\n     */\n    function display_simulation_state(is_new_step=true) {\n        const watched_idx = check_watched_entity()\n        display.update_world(simulation.entity_map, is_new_step, watched_idx)\n        display.update_watched_info(watched_entity)\n    }\n\n    /**\n     * Do one simulation step and display it.\n     * @method step\n     */\n    function step() {\n        simulation.update()\n        display_simulation_state()\n    }\n\n    /**\n     * Simulation loop, called in intervals.\n     * @method loop\n     * @private\n     */\n    function loop() {\n        current_timeout = setTimeout(loop, step_duration)\n        step()\n    }\n\n    /**\n     * Start simulation. This includes parsing the map, displaying everything\n     * and finally initiating the game loop.\n     * @method start_simulation\n     */\n    function start_simulation() {\n        const entity_map = translator.parse_initial_map(map)\n        num_map_cols = entity_map[0].length\n        simulation.setup_tile_map(entity_map)\n        display.update_speed(step_duration)\n        display_simulation_state(false)\n        setTimeout(loop, step_duration)\n    }\n\n    /**\n     * Set a new watched entity and display it. If there is no watched entity\n     * at the given position, the entity tracking info will be cleared.\n     * @method set_watched_entity\n     * @param {Number} index_on_map Index n of the new watched entity as in\n     *                              child number n of its parent node.\n     */\n    function set_watched_entity(index_on_map) {\n        const y = Math.floor(index_on_map / num_map_cols)\n        const x = index_on_map % num_map_cols\n        watched_entity = simulation.get_entity(y, x)\n        if(!watched_entity)\n            index_on_map = undefined\n        display.highlight_watched_on_map(index_on_map)\n        display.update_watched_info(watched_entity)\n    }\n\n    /**\n     * Check if the currently watched entity is still alive and if not, set\n     * global variable *watched_entity* to *null*. Return the map index of the\n     * watched entity, or *undefined* if there is none.\n     * @method check_watched_entity\n     * @private\n     * @return {Number} Index n of the watched entity as in child number n of\n     *                  its parent node, or *undefined* if there is no watched\n     *                  entity.\n     */\n    function check_watched_entity() {\n        let watched_idx\n        if(watched_entity) {\n            if(!watched_entity.in_simulation()) {\n                watched_entity = null\n            } else {\n                watched_idx = watched_entity.pos_y * num_map_cols +\n                                watched_entity.pos_x\n            }\n        }\n        return watched_idx\n    }\n\n    /**\n     * Slow down simulation.\n     * @method slow_down_interval\n     * @return {Object} Two-member object, containing:\n     * - step_duration: new duration in milliseconds\n     * - limit_reached: true if minimum speed reached, false otherwise\n     */\n    function slow_down_interval() {\n        if(step_duration < max_step_duration) {\n            step_duration += step_change\n            display.update_speed(step_duration)\n        }\n        return {\n            step_duration, limit_reached: step_duration == max_step_duration\n        }\n    }\n\n    /**\n     * Speed up simulation.\n     * @method speed_up_interval\n     * @return {Object} Two-member object, containing:\n     * - step_duration: new duration in milliseconds\n     * - limit_reached: true if maximum speed reached, false otherwise\n     */\n    function speed_up_interval() {\n        if(step_duration > min_step_duration) {\n            step_duration -= step_change\n            display.update_speed(step_duration)\n        }\n        return {\n            step_duration, limit_reached: step_duration == min_step_duration\n        }\n    }\n\n    /**\n     * Pause/unpause simulation.\n     * @method stop_resume\n     * @return {Boolean} True if simulation continued, false if it stopped\n     */\n    function stop_resume() {\n        if(simulation_stopped) {\n            simulation_stopped = false\n            loop()\n            return true\n        } else {\n            simulation_stopped = true\n            clearTimeout(current_timeout)\n            return false\n        }\n    }\n\n    /**\n     * KIll all entities of the given type and display the result.\n     * @method kill_all_of\n     * @param {String} entity_type Type of entity to kill\n     */\n    function kill_all_of(entity_type) {\n        simulation.kill_entity_type(entity_type)\n        display_simulation_state(false)\n    }\n\n    return {\n        start_simulation,\n        step,\n        set_watched_entity,\n        slow_down_interval,\n        speed_up_interval,\n        stop_resume,\n        kill_all_of\n    }\n}()\n\nexport default main\n","// TODO: button dis/enabling done via display module ?\n\n/**\n * Event listeners for user input.\n * @module user_ctrl\n * @requires main\n * @requires globals\n */\n\nimport { indexOf } from 'lodash-es'\nimport main from './main'\nimport { markupPrefix } from './globals'\n\n\nconst user_ctrl = function() {\n\n    let slower_button, faster_button, pause_button,\n        step_button, kill_button, kill_select, toggle_ctrls\n\n    /**\n     * Install event listeners.\n     * @method setup_event_listeners\n     * @private\n     */\n    function setup_event_listeners() {\n        faster_button = document.getElementById(`${markupPrefix}faster`)\n        slower_button = document.getElementById(`${markupPrefix}slower`)\n        pause_button = document.getElementById(`${markupPrefix}pause`)\n        step_button = document.getElementById(`${markupPrefix}step`)\n        kill_button = document.getElementById(`${markupPrefix}kill`)\n        kill_select = document.getElementById(`${markupPrefix}kill-options`)\n        toggle_ctrls = document.getElementById(`${markupPrefix}toggle-ctrls`)\n        faster_button.addEventListener('click', increase_speed)\n        slower_button.addEventListener('click', decrease_speed)\n        pause_button.addEventListener('click', stop_resume)\n        kill_button.addEventListener('click', kill_entities)\n\n        /* disable this button via javascript here, b/c for some reason,\n           firefox doesn't respect the disabled attribute in html */\n        step_button.setAttribute('disabled', '')\n\n        toggle_ctrls.addEventListener('click', toggle_ctrl_panel)\n        document.getElementById('evolife--world').addEventListener(\n            'mouseup', track_entity\n        )\n    }\n\n    /**\n     * Event handler: slow down simulation.\n     * @method decrease_speed\n     * @param {Event} event Mouse click event\n     * @private\n     */\n    function decrease_speed(event) {\n        const {\n            step_duration, limit_reached: disable_button\n        } = main.slow_down_interval()\n\n        if(disable_button) {\n            slower_button.setAttribute('disabled', '')\n            slower_button.removeEventListener('click', decrease_speed)\n        } else if(faster_button.hasAttribute('disabled')) {\n            faster_button.removeAttribute('disabled')\n            faster_button.addEventListener('click', increase_speed)\n        }\n    }\n\n    /**\n     * Event handler: speed up simulation.\n     * @method increase_speed\n     * @param {Event} event Mouse click event\n     * @private\n     */\n    function increase_speed(event) {\n        const {\n            step_duration, limit_reached: disable_button\n        } = main.speed_up_interval()\n\n        if(disable_button) {\n            faster_button.setAttribute('disabled', '')\n            faster_button.removeEventListener('click', increase_speed)\n        } else if(slower_button.hasAttribute('disabled')) {\n            slower_button.removeAttribute('disabled')\n            slower_button.addEventListener('click', decrease_speed)\n        }\n    }\n\n    /**\n     * Event handler: pause or resume simulation.\n     * @method stop_resume\n     * @param {Event} event Mouse click event\n     * @private\n     */\n    function stop_resume(event) {\n        if(main.stop_resume()) {\n            pause_button.innerHTML = 'Pause'\n            step_button.setAttribute('disabled', '')\n            step_button.removeEventListener('click', do_step)\n        } else {\n            pause_button.innerHTML = 'Resume'\n            step_button.removeAttribute('disabled')\n            step_button.addEventListener('click', do_step)\n        }\n    }\n\n    /**\n     * Event handler: move simulation one step forward.\n     * @method do_step\n     * @param {Event} event Mouse click event\n     * @private\n     */\n    function do_step(event) {\n        main.step()\n    }\n\n    /**\n     * Event handler: mkill all entities of the selected type.\n     * @method kill_entities\n     * @param {Event} event Mouse click event\n     * @private\n     */\n    function kill_entities(event) {\n        main.kill_all_of(kill_select.value)\n    }\n\n    /**\n     * Event handler: show or hide control panel.\n     * @method toggle_ctrl_panel\n     * @param {Event} event Mouse click event\n     * @private\n     */\n    function toggle_ctrl_panel(event) {\n        let ctrl_panel = document.getElementById(\n            `${markupPrefix}controls-wrapper`\n        )\n        if(toggle_ctrls.innerHTML.trim() === 'Show Control Panel') {\n            ctrl_panel.style.height = ctrl_panel.scrollHeight + 'px'\n            ctrl_panel.style.opacity = 1\n            ctrl_panel.style.marginBottom = '12px'\n            toggle_ctrls.innerHTML = 'Hide Control Panel'\n        } else {\n            ctrl_panel.style.height = 0\n            ctrl_panel.style.opacity = 0\n            ctrl_panel.style.marginBottom = 0\n            toggle_ctrls.innerHTML = 'Show Control Panel'\n        }\n    }\n\n    /**\n     * Event handler: track the clicked entity.\n     * @method track_entity\n     * @param {Event} event Mouse click event\n     * @private\n     */\n    function track_entity(event) {\n        const clicked = event.target\n        main.set_watched_entity(indexOf(clicked.parentNode.children, clicked))\n    }\n\n    return { setup_event_listeners }\n}()\n\nexport default user_ctrl\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport game from '@/game/main'\nimport userCtrl from '@/game/user_ctrl'\n\nexport default Vue.extend({\n  name: 'Game',\n  mounted() {\n    userCtrl.setup_event_listeners()\n    game.start_simulation()\n  }\n})\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Game.vue?vue&type=template&id=b4303db6&\"\nimport script from \"./Game.vue?vue&type=script&lang=ts&\"\nexport * from \"./Game.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Game.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\nimport Vue from 'vue'\nimport Game from './components/Game.vue'\n\nexport default Vue.extend({\n  name: 'app',\n  components: {\n    Game\n  }\n})\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=71160289&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n"],"sourceRoot":""}